
COMPILER_DIRS= utils parsing typing bytecomp asmcomp driver toplevel

COMPILER_INCLUDES=$(addprefix -I ,$(COMPILER_DIRS))

INCLUDES=-I utils -I parsing -I typing -I bytecomp -I asmcomp -I driver \
	 -I toplevel

COMPILER_UTILS=utils/misc.cmo utils/tbl.cmo utils/config.cmo \
  utils/clflags.cmo utils/terminfo.cmo utils/ccomp.cmo utils/warnings.cmo \
  utils/consistbl.cmo

COMPILER_PARSING=parsing/location.cmo parsing/longident.cmo \
  parsing/ast_helper.cmo \
  parsing/syntaxerr.cmo parsing/parser.cmo \
  parsing/lexer.cmo parsing/parse.cmo parsing/printast.cmo \
  parsing/pprintast.cmo \
  parsing/ast_mapper.cmo

COMPILER_TYPING=typing/ident.cmo typing/path.cmo \
  typing/primitive.cmo typing/types.cmo \
  typing/btype.cmo typing/oprint.cmo \
  typing/subst.cmo typing/predef.cmo \
  typing/datarepr.cmo typing/cmi_format.cmo typing/env.cmo \
  typing/typedtree.cmo typing/printtyped.cmo typing/ctype.cmo \
  typing/printtyp.cmo typing/includeclass.cmo \
  typing/mtype.cmo typing/envaux.cmo typing/includecore.cmo \
  typing/typedtreeIter.cmo typing/typedtreeMap.cmo typing/cmt_format.cmo \
  typing/includemod.cmo typing/typetexp.cmo typing/parmatch.cmo \
  typing/stypes.cmo typing/typecore.cmo \
  typing/typedecl.cmo typing/typeclass.cmo \
  typing/typemod.cmo

COMPILER_COMP=bytecomp/lambda.cmo bytecomp/printlambda.cmo \
  bytecomp/typeopt.cmo bytecomp/switch.cmo bytecomp/matching.cmo \
  bytecomp/translobj.cmo bytecomp/translcore.cmo \
  bytecomp/translclass.cmo bytecomp/translmod.cmo \
  bytecomp/simplif.cmo bytecomp/runtimedef.cmo \
  driver/pparse.cmo driver/main_args.cmo \
  driver/compenv.cmo driver/compmisc.cmo

COMPILER_COMMON=$(COMPILER_UTILS) $(COMPILER_PARSING) $(COMPILER_TYPING) $(COMPILER_COMP)

BYTECOMP=bytecomp/meta.cmo bytecomp/instruct.cmo bytecomp/bytegen.cmo \
  bytecomp/printinstr.cmo bytecomp/opcodes.cmo bytecomp/emitcode.cmo \
  bytecomp/bytesections.cmo bytecomp/dll.cmo bytecomp/symtable.cmo \
  bytecomp/bytelink.cmo bytecomp/bytelibrarian.cmo bytecomp/bytepackager.cmo \
  driver/errors.cmo driver/compile.cmo

ASMCOMP=asmcomp/arch.cmo asmcomp/debuginfo.cmo \
  asmcomp/cmm.cmo asmcomp/printcmm.cmo \
  asmcomp/reg.cmo asmcomp/mach.cmo asmcomp/proc.cmo \
  asmcomp/clambda.cmo asmcomp/printclambda.cmo asmcomp/compilenv.cmo \
  asmcomp/closure.cmo asmcomp/strmatch.cmo asmcomp/cmmgen.cmo \
  asmcomp/printmach.cmo asmcomp/selectgen.cmo asmcomp/selection.cmo \
  asmcomp/comballoc.cmo \
  asmcomp/CSEgen.cmo asmcomp/CSE.cmo \
  asmcomp/liveness.cmo \
  asmcomp/spill.cmo asmcomp/split.cmo \
  asmcomp/interf.cmo asmcomp/coloring.cmo \
  asmcomp/reloadgen.cmo asmcomp/reload.cmo \
  asmcomp/deadcode.cmo \
  asmcomp/printlinear.cmo asmcomp/linearize.cmo \
  asmcomp/schedgen.cmo asmcomp/scheduling.cmo \
  asmcomp/emitaux.cmo asmcomp/emit.cmo asmcomp/asmgen.cmo \
  asmcomp/asmlink.cmo asmcomp/asmlibrarian.cmo asmcomp/asmpackager.cmo \
  driver/opterrors.cmo driver/optcompile.cmo

ARCHSPECIFIC=$(addprefix asmcomp/,arch.ml emit.mlp proc.ml reload.ml scheduling.ml selection.ml)

BYTESTART=driver/main.cmo

OPTSTART=driver/optmain.cmo

compilerlibs/ocamlcommon.cma: $(COMPILER_COMMON)
	$(BOOT_OCAMLC) -a -o $@ $^

compilerlibs/ocamlbytecomp.cma: $(BYTECOMP)
	$(BOOT_OCAMLC) -a -o $@ $^

compilerlibs/ocamloptcomp.cma: $(ASMCOMP)
	$(BOOT_OCAMLC) -a -o $@ $^

$(FIRST_OCAMLOPT_LOC): compilerlibs/ocamlcommon.cma compilerlibs/ocamloptcomp.cma $(OPTSTART) \
		$(BOOT_OCAMLC) $(STDLIB_BYTE)
	$(BOOT_OCAMLC) $(LINKFLAGS) -I stdlib -o $@\
		compilerlibs/ocamlcommon.cma compilerlibs/ocamloptcomp.cma $(OPTSTART)

ocamlcompopt.sh: driver/ocamlcomp.sh.in $(FIRST_OCAMLOPT)
	@sed -e 's|@compiler@|$$topdir/boot/ocamlrun $$topdir/ocamlopt|' $< > $@.tmp
	@chmod +x $@.tmp
	@mv $@.tmp $@

$(FIRST_OCAMLC_LOC): compilerlibs/ocamlcommon.cma compilerlibs/ocamlbytecomp.cma $(BYTESTART) \
		$(BOOT_OCAMLC) $(STDLIB_BYTE)
	$(BOOT_OCAMLC) $(LINKFLAGS) -I stdlib -o $@ \
		compilerlibs/ocamlcommon.cma compilerlibs/ocamlbytecomp.cma $(BYTESTART)

ocamlcomp.sh: driver/ocamlcomp.sh.in $(FIRST_OCAMLC)
	@sed -e 's|@compiler@|$$topdir/boot/ocamlrun $$topdir/ocamlc|' $< > $@.tmp
	@chmod +x $@.tmp
	@mv $@.tmp $@


%.cmi: %.mli $(BOOT_OCAMLC) $(STDLIB_CMI)
	$(BOOT_OCAMLC) -I $(STDLIB_DIR) $(COMPFLAGS) $(COMPILER_INCLUDES) -o $@ -c $<

%.cmo: %.ml $(BOOT_OCAMLC) $(STDLIB_BYTE)
	$(BOOT_OCAMLC) -I $(STDLIB_DIR) $(COMPFLAGS) $(COMPILER_INCLUDES) -o $@ -c $<

%.cmx: %.ml $(SPECIFIC_COMPFLAGS) $(BOOT_OCAMLOPT) $(STDLIB_OPT)
	$(BOOT_OCAMLOPT) -I $(STDLIB_DIR) $(OPTCOMPFLAGS) $(COMPILER_INCLUDES) -o $@ -c $<

parsing/parser.mli parsing/parser.ml: parsing/parser.mly $(OCAMLYACC)
	$(OCAMLYACC) $(YACCFLAGS) $<

parsing/lexer.ml: parsing/lexer.mll $(BOOT_OCAMLLEX)
	$(BOOT_OCAMLLEX) $<

# Choose the right machine-dependent files
asmcomp/%.ml: asmcomp/$(ARCH)/%.ml
	@cp -f $< $@.tmp
	@chmod u-w $@.tmp
	@rm -f $@
	@mv $@.tmp $@

compiler/depend: $(STDLIB_DIR)/sys.ml $(ARCHSPECIFIC:.mlp=.ml)
	$(BOOT_OCAMLDEP) $(COMPILER_INCLUDES) \
		$(addsuffix /*.mli, $(COMPILER_DIRS)) \
		$(addsuffix /*.ml, $(COMPILER_DIRS))  \
		> .compiler.depend

depend:: compiler/depend

include .compiler.depend

clean::
	rm -rf $(FIRST_OCAMLC_LOC) $(FIRST_OCAMLOPT_LOC) .compile.depend
	rm -f $(addsuffix /*.cm*, $(COMPILER_DIRS))
	rm -f $(addsuffix /*.$(O), $(COMPILER_DIRS))
	rm -f $(addsuffix /*.$(A), $(COMPILER_DIRS))
	rm -f parsing/lexer.ml parsing/parser.mli parsing/parser.ml parsing/parser.output
	rm -f $(addprefix asmcomp/, $(ARCHSPECIFIC) emit.ml emit_nt.ml)
	rm -f $(addprefix compilerlibs/, ocamlbytecomp.cma ocamlcommon.cma ocamloptcomp.cma)
